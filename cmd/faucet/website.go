// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x71\x73\xdb\xb6\x92\xff\xdb\xf9\x14\x5b\x5e\xf2\x24\x9d\x4d\x52\xb6\x93\x3c\x9f\x44\xaa\x93\x97\xd7\xd7\xcb\xcd\x5d\xda\x69\xd3\xde\xbd\xe9\xeb\xdc\x80\xc4\x4a\x44\x0c\x02\x2c\x00\x4a\x56\x3d\xfa\xee\x37\x00\x48\x8a\x94\x64\x37\x69\x72\x6f\x9a\x3f\x1c\x12\x58\xec\x2e\x76\x7f\x8b\x5d\xac\x98\x7c\xf1\xd7\x6f\x5e\xbf\xfb\xfb\xb7\x5f\x41\x61\x4a\xbe\x78\x92\xd8\xff\x80\x13\xb1\x4a\x03\x14\xc1\xe2\xc9\x59\x52\x20\xa1\x8b\x27\x67\x67\x49\x89\x86\x40\x5e\x10\xa5\xd1\xa4\x41\x6d\x96\xe1\x4d\xb0\x9f\x28\x8c\xa9\x42\xfc\xa5\x66\xeb\x34\xf8\x9f\xf0\x87\x57\xe1\x6b\x59\x56\xc4\xb0\x8c\x63\x00\xb9\x14\x06\x85\x49\x83\x37\x5f\xa5\x48\x57\xd8\x5b\x27\x48\x89\x69\xb0\x66\xb8\xa9\xa4\x32\x3d\xd2\x0d\xa3\xa6\x48\x29\xae\x59\x8e\xa1\x7b\xb9\x00\x26\x98\x61\x84\x87\x3a\x27\x1c\xd3\xcb\x60\xf1\xc4\xf2\x31\xcc\x70\x5c\xdc\xdf\x47\x6f\xd1\x6c\xa4\xba\xdd\xed\x66\xf0\xaa\x36\x05\x0a\xc3\x72\x62\x90\xc2\xdf\x48\x9d\xa3\x49\x62\x4f\xe9\x16\x71\x26\x6e\xa1\x50\xb8\x4c\x03\xab\xba\x9e\xc5\x71\x4e\xc5\x7b\x1d\xe5\x5c\xd6\x74\xc9\x89\xc2\x28\x97\x65\x4c\xde\x93\xbb\x98\xb3\x4c\xc7\x66\xc3\x8c\x41\x15\x66\x52\x1a\x6d\x14\xa9\xe2\xeb\xe8\x3a\xfa\x73\x9c\x6b\x1d\x77\x63\x51\xc9\x44\x94\x6b\x1d\x80\x42\x9e\x06\xda\x6c\x39\xea\x02\xd1\x04\x10\x2f\x7e\x9f\xdc\xa5\x14\x26\x24\x1b\xd4\xb2\xc4\xf8\x79\xf4\xe7\x68\xea\x44\xf6\x87\x1f\x97\x6a\xc5\xea\x5c\xb1\xca\x80\x56\xf9\x07\xcb\x7d\xff\x4b\x8d\x6a\x1b\x5f\x47\x97\xd1\x65\xf3\xe2\xe4\xbc\xd7\xc1\x22\x89\x3d\xc3\xc5\x27\xf1\x0e\x85\x34\xdb\xf8\x2a\x7a\x1e\x5d\xc6\x15\xc9\x6f\xc9\x0a\x69\x2b\xc9\x4e\x45\xed\xe0\x67\x93\xfb\x90\x0f\xdf\x1f\xba\xf0\x73\x08\x2b\x65\x89\xc2\x44\xef\x75\x7c\x15\x5d\xde\x44\xd3\x76\xe0\x98\xbf\x13\x60\x9d\x66\x45\x9d\x45\x6b\x54\x16\xb9\x3c\xcc\x51\x18\x54\x70\x6f\x47\xcf\x4a\x26\xc2\x02\xd9\xaa\x30\x33\xb8\x9c\x4e\x9f\xcd\x4f\x8d\xae\x0b\x3f\x4c\x99\xae\x38\xd9\xce\x60\xc9\xf1\xce\x0f\x11\xce\x56\x22\x64\x06\x4b\x3d\x03\xcf\xd9\x4d\xec\x9c\xcc\x4a\xc9\x95\x42\xad\x1b\x61\x95\xd4\xcc\x30\x29\x66\x16\x51\xc4\xb0\x35\x9e\xa2\xd5\x15\x11\x47\x0b\x48\xa6\x25\xaf\x0d\x1e\x28\x92\x71\x99\xdf\xfa\x31\x17\xcd\xfd\x4d\xe4\x92\x4b\x35\x83\x4d\xc1\x9a\x65\xe0\x04\x41\xa5\xb0\x61\x0f\x15\xa1\x94\x89\xd5\x0c\x5e\x56\xcd\x7e\xa0\x24\x6a\xc5\xc4\x0c\xa6\xfb\x25\x49\xdc\x9a\x31\x89\xfd\xc1\xf5\xe4\x2c\xc9\x24\xdd\x3a\x1f\x52\xb6\x86\x9c\x13\xad\xd3\xe0\xc0\xc4\xee\x40\x1a\x10\xd8\x73\x88\x30\xd1\x4e\x0d\xe6\x94\xdc\x04\xe0\x04\xa5\x81\x57\x22\xcc\xa4\x31\xb2\x9c\xc1\xa5\x55\xaf\x59\x72\xc0\x8f\x87\x7c\x15\x5e\x5e\xb5\x93\x67\x49\x71\xd9\x32\x31\x78\x67\x42\xe7\x9f\xce\x33\xc1\x22\x61\xed\xda\x25\x81\x25\x09\x33\x62\x8a\x00\x88\x62\x24\x2c\x18\xa5\x28\xd2\xc0\xa8\x1a\x2d\x8e\xd8\x02\xfa\xc7\xdf\x03\xa7\x5f\x71\xd9\xea\x15\x53\xb6\x6e\xb6\xd5\x7b\x3c\xd8\xe1\xc3\x9b\xb8\x81\xe6\x41\x2e\x97\x1a\x4d\xd8\xdb\x53\x8f\x98\x89\xaa\x36\xe1\x4a\xc9\xba\xea\xe6\xcf\x12\x37\x0a\x8c\xa6\x41\xad\x78\xd0\x1c\xff\xee\xd1\x6c\xab\xc6\x14\x41\xb7\x71\xa9\xca\xd0\x7a\x42\x49\x1e\x40\xc5\x49\x8e\x85\xe4\x14\x55\x1a\x7c\x2f\x73\x46\x38\x08\xbf\x67\xf8\xe1\xbb\xff\x84\xc6\x65\x4c\xac\x60\x2b\x6b\x05\x3f\xbe\x7d\x07\x84\x52\x8b\xd4\x28\x8a\x7a\x3a\x38\xd8\x1e\x6b\x19\x66\x46\xec\xa9\xce\x92\xac\x36\x46\x76\x84\x99\x11\x90\x19\x11\x52\x5c\x92\x9a\x1b\xa0\x4a\x56\x54\x6e\x44\x68\xe4\x6a\x65\x93\x9c\xd7\xdf\x2f\x0a\x80\x12\x43\x9a\xa9\x34\x68\x69\x5b\xf7\x11\x5d\xc9\xaa\xae\x1a\x07\xfa\x41\xbc\xab\x88\xa0\x48\xad\xbb\xb9\xc6\x60\xf1\x35\x5b\x23\x94\x68\xb7\x71\x76\x88\x85\x9c\x28\x34\x61\x9f\xe5\x11\x22\x92\xd8\xab\xe2\x37\x04\xcd\xbf\xa4\xe6\x2d\xa7\x6e\x03\x25\x8a\x1a\x06\x6f\xa1\xb2\x07\x4a\xb0\xb8\xbf\x57\x44\xac\x10\x9e\x32\x7a\x77\x01\x4f\x49\x29\x6b\x61\x60\x96\x42\xf4\xca\x3d\xea\xdd\x6e\xc0\x1d\x20\xe1\x6c\x91\x90\xc7\x70\x0d\x52\xe4\x9c\xe5\xb7\x69\x60\x18\xaa\xf4\xfe\xde\x32\xdf\xed\xe6\x70\x7f\xcf\x96\xf0\x34\xfa\x0e\x73\x52\x99\xbc\x20\xbb\xdd\x4a\xb5\xcf\x11\xde\x61\x5e\x1b\x1c\x4f\xee\xef\x91\x6b\xdc\xed\x74\x9d\x95\xcc\x8c\xdb\xe5\x76\x5c\xd0\xdd\xce\xea\xdc\xe8\xb9\xdb\x41\x6c\x99\x0a\x8a\x77\xf0\x34\xfa\x16\x15\x93\x54\x83\xa7\x4f\x62\xb2\x48\x62\xce\x16\xcd\xba\xa1\x91\xe2\x9a\xef\xd1\x12\x5b\xb8\x74\x00\x77\xf1\xe2\x54\xed\x6b\x7a\x02\xfe\xab\xb0\xd3\xbe\x41\x83\x66\x06\x6f\x71\x9b\x06\xf7\xf7\xfd\xb5\xcd\x6c\x4e\x38\xcf\x88\xb5\x8b\xdf\x5a\xb7\xe8\x57\xb4\x28\x5d\x33\xed\x6a\xa9\x45\xab\xc1\x5e\xed\x0f\x8c\xe7\x83\x13\xcb\xc8\x6a\x06\xd7\x57\xbd\xe3\xea\x54\xa8\xbf\x3c\x08\xf5\xeb\x93\xc4\x15\x11\xc8\xc1\xfd\x0d\x75\x49\x78\xfb\xdc\xc4\x4a\x2f\xf4\x0e\x17\x85\xf6\x70\xee\x54\xeb\x0e\xf9\xe9\x1c\xe4\x1a\xd5\x92\xcb\xcd\x0c\x48\x6d\xe4\x1c\x4a\x72\xd7\x25\xba\xeb\xe9\xb4\xaf\xb7\xad\x01\x49\xc6\xd1\x1d\x2b\x0a\x7f\xa9\x51\x1b\xdd\x1d\x22\x7e\xca\xfd\xb5\x67\x09\x45\xa1\x91\x1e\x58\xc3\x4a\xb4\xa6\x75\x54\x3d\xd7\x77\xc6\x3c\xa9\xfb\x52\xca\x2e\x77\xf4\xd5\x68\x58\xf7\xd2\x5c\xb0\x48\x8c\xda\xd3\x9d\x25\x86\x7e\xd4\xd9\xaf\x6c\x6d\xf7\xd0\xd1\xef\xcf\x33\xbb\xf7\x0a\x51\xf9\xc2\xc2\x42\x16\xdc\x6b\x12\x1b\xfa\x09\x92\x2d\x08\x33\xa2\xf1\x43\xc4\xbb\x14\xbf\x17\xef\x5e\x3f\x55\x7e\x81\x44\x99\x0c\x89\xf9\x10\x05\x96\xb5\xa0\xbd\xfd\xff\xf8\xf6\xdd\xa7\x8a\xaf\x05\x5b\xa3\xd2\xcc\x6c\x3f\x54\x3e\xd2\xbd\x02\xfe\x7d\xa8\x42\x12\x1b\xf5\x38\xd2\xfa\x2f\x9f\x29\xb4\x7f\xab\x12\xb9\x5e\xfc\xbb\xdc\x00\x95\xa8\xc1\x14\x4c\x83\xcd\xa9\x5f\x26\x71\x71\xdd\x91\x54\x8b\x77\x76\xc2\xe6\xd4\xa5\xab\x27\x80\x69\x50\xb5\x70\xe9\x56\x0a\x30\x05\x0e\x6b\x90\x26\x33\x47\xf0\x4e\xda\x3a\x6e\x8d\xc2\x40\x49\x38\xcb\x99\xac\x35\x90\xdc\x48\xa5\x61\xa9\x64\x09\x78\x57\x90\x5a\x1b\xcb\xc8\x1e\x1d\x64\x4d\x18\x77\x71\xe4\xdc\x09\x52\x01\xc9\xf3\xba\xac\x6d\x1d\x2a\x56\x80\x42\xd6\xab\xc2\x69\x62\x24\xf8\x94\xc4\xa5\x58\x75\xda\xe8\x8a\x94\x40\x8c\x21\xf9\xad\xbe\x80\xf6\x3c\x00\xa2\x10\x0c\x43\x6a\x57\xe5\xb2\x2c\xa5\x80\x6b\x45\xa1\x22\xca\x6c\x41\x0f\xcb\x09\x92\xe7\x2e\xbf\x45\xf0\x4a\x6c\xa5\x40\x28\xc8\xda\xe9\x07\xef\xfc\x0d\xe2\x02\xbe\x96\x72\xc5\xf1\xdc\xaa\xf7\x37\x92\x63\x26\x65\xb7\x0c\x4a\xb2\x6d\xe5\x36\x9b\xd8\x30\x53\x30\x6f\xa5\x0a\x55\x69\x79\x50\xe0\xac\x64\x46\x47\x49\x5c\xed\x0f\xd5\x7d\x7a\xe6\x61\x21\x15\xfb\xd5\x16\x35\xbc\x7f\x82\x9a\x83\xf3\xa5\x3d\x1e\x9d\xeb\x39\x2e\xcd\x0c\x9e\xfb\xe3\xf1\x10\xcc\xcd\xed\xe7\x14\x92\x5b\x9e\xee\x56\x69\x73\xce\x0c\xae\x7d\x29\xeb\x6b\x09\x6a\x7a\x1a\xd0\x03\xbc\x79\xa1\x37\x37\xd5\x5d\xa7\x47\x57\x0f\x4f\x3b\x26\x16\x08\x43\xa3\xac\x59\xcf\x9e\x25\xb9\x45\x20\x90\x90\x83\xdb\x71\xa3\xb4\xbb\x5b\x31\xd7\x1b\x88\xcd\x06\xd1\x7c\x69\xe3\x37\xfd\xce\x33\x64\x62\xf5\xec\x6a\xea\x81\x69\x1f\x2c\xfb\x67\x57\x53\x26\x8c\x7c\x76\x35\x9d\xde\x4d\x3f\xf0\xdf\xb3\xab\xa9\x14\xcf\xae\xa6\xa6\xc0\x67\x57\xd3\x67\x57\xd7\x7d\x48\xfb\x91\x1f\xdf\xbe\x7b\x5d\x10\xe6\xa8\x50\x5b\x69\x2d\xd2\x03\x30\x44\xad\xd0\xa4\xc1\xff\x92\x4c\xd6\x66\x96\x71\x22\x6e\x83\x85\x53\xd7\x16\x1c\x0e\x05\x47\xb5\x29\x54\x44\x5b\x34\x58\x65\x1d\x40\x9a\x16\x88\x86\xb1\xae\x95\x92\xb5\xb0\x39\x11\xec\x76\x5d\x84\x8a\x91\x05\x98\xb5\xc9\x24\x4a\x32\x15\x2f\x5e\xcb\x6a\x1b\x3a\x26\x6e\xf9\x91\x05\x75\x5d\x55\x52\x99\xa8\x6f\x49\x62\xaf\x3f\x1c\x75\x7c\x33\x7d\x71\xf3\xf2\x51\xcd\xb5\x2d\xae\x9d\xfa\x9d\x86\x24\x93\x6b\x04\x5f\xca\x67\xf2\x0e\x88\xa0\xb0\x64\x0a\x81\x6c\xc8\xf6\x8b\x24\xa6\xee\xe2\xf5\xe9\x80\x5d\xb9\x18\x0b\x2b\x5e\x6b\x5b\x80\x30\x1b\xa3\x7f\x28\xf4\xfa\x43\x00\xbe\xe5\xb5\xbe\x80\xaa\xce\x38\xd3\x05\x10\x10\xb8\x81\x44\x1b\x25\xc5\x6a\xe1\x46\x73\x7b\x31\x75\xaf\x50\x49\x6d\x1e\x00\x02\x96\x19\x52\x7a\x02\x0a\xbf\x13\x09\x56\x94\xf3\xde\x3f\xdf\x73\xcb\xe6\x48\xfc\x43\x79\xab\x3d\xa7\xff\x80\xae\x3a\x0a\xda\xcd\x66\x13\xb5\x46\x74\x11\x5b\x20\xaf\x62\x9b\xb7\x6a\xc1\xcc\x36\xf6\xc7\x9e\x14\xf1\x97\x8c\xa6\x57\x37\x57\x2f\x5f\x5e\x3d\xff\xb7\x9b\x17\x2f\xae\x6e\x9e\xbf\x78\x28\x9c\x3b\x3c\xfc\xfe\x68\xf6\x37\x9f\xb7\xf2\x55\x6d\x8a\xee\xda\xe3\xa1\xd2\x96\xdb\xb6\xac\xa2\xf6\xda\xa8\x82\xdf\x0d\x9f\x5a\xd8\xda\x31\x24\xfc\x64\xd9\xf7\x11\x00\x72\x08\x7a\x44\xb3\x4f\x44\x55\x8b\x1c\x0b\x12\x59\x1b\xbb\xc3\xb6\xf1\xc2\xa4\xe8\x90\x74\x01\x9a\x95\x15\xdf\x42\xbe\xf7\xfa\x11\xa4\x1e\xf4\xc7\x6f\x22\x6a\xe8\x31\x8f\x2f\x57\xad\x95\x92\xa2\xad\xd3\x74\xad\x73\xac\x5c\x33\xde\x56\x3f\x7f\xd9\xfe\x4a\x84\x61\x02\xdb\x2a\x29\x82\x6f\x04\xdf\x42\xad\x11\x96\x52\x01\xc5\xac\x5e\xad\x5c\x61\xa7\xa0\x52\x6c\x4d\x0c\xb6\xa5\x91\x6e\x00\xd1\xe1\xa1\x77\x0f\xb5\x25\x2a\xef\x55\x8c\x7f\x97\x35\xe4\x44\x80\x51\x24\xbf\xf5\x41\x52\x2b\x65\x83\xa4\x42\xbf\x9b\xae\x38\xcb\x90\xcb\x8d\x23\xf1\xfb\x5e\x32\xe4\xae\x52\xd3\x88\x50\xc8\x0d\x94\x75\xee\xc2\xd0\x56\x62\x6e\x13\x1b\xc2\x0c\xd4\xc2\x30\xee\x4d\x69\x6a\x25\x6c\x5d\x87\x83\x82\xea\xe8\xa6\x9e\x60\xb9\x78\x57\xe0\x89\x22\xb6\xbb\x63\x83\xc2\xd7\x9e\x1c\x2a\x25\x0d\xe6\xd6\x97\x40\x56\x84\x09\x6d\x3d\xe2\x4a\x36\x2c\x3f\xe0\x0e\xde\x3d\x35\x0f\xfb\x46\xb2\x9b\x8e\x63\xf8\x9a\xcb\x8c\x70\x58\x5b\x90\x67\xdc\x96\xdf\x12\x0a\x69\xb7\xde\xb3\x96\x36\xc4\xd4\x1a\xe4\xd2\x8d\x7a\xcd\xed\xfa\x35\x51\xd6\x83\x58\x56\x06\xd2\xa6\x0d\x6a\xc7\x34\xaa\x75\xd3\xdc\xb5\xaf\x86\xa1\x1a\xcc\x77\x56\x4f\xe1\xa7\x9f\xe7\x4f\x1a\x55\xfe\x8a\x4b\x07\x09\x0b\x6d\xbf\x65\x53\x10\x03\xb9\x42\x62\x50\x43\xce\xa5\xae\x95\xd7\x90\x2a\x59\x81\xd5\xb2\xe5\xd4\x72\xb6\x13\x95\x93\xd6\x32\x19\x17\x44\x17\x93\xa6\x8b\xab\xd0\x79\xa9\x9b\x6b\xc7\xcf\x2c\xea\xc6\x96\x01\x4b\xa7\x73\x60\x49\xcb\x37\xe2\x28\x56\xa6\x98\x03\x3b\x3f\xef\x88\xcf\xd8\x12\xc6\x2d\xc5\x4f\xec\xe7\xc8\xdc\x45\x56\x0a\xa4\x29\xf4\xa5\x39\x81\x0d\x1f\x5d\x71\x96\xe3\x98\x5d\xc0\xe5\x64\xde\xce\x66\x0a\xc9\x6d\xfb\xd6\xf8\xd1\xff\xe7\xfe\xee\xe6\x43\xcb\x38\xe3\x0f\x6c\xe3\x3b\x35\x1a\x08\xac\x98\x36\x50\x2b\x0e\x4d\x0c\x7b\x17\x74\x0e\x71\x74\x7d\xab\x1c\xe1\xb2\x79\x68\x30\xd5\x6e\xc1\xb3\x89\x34\x0a\x3a\xfe\x8f\xef\xbf\x79\x1b\x69\xa3\x98\x58\xb1\xe5\x76\x7c\x5f\x2b\x3e\x83\xa7\xe3\xe0\x5f\x6a\xc5\x83\xc9\x4f\xd3\x9f\xa3\x35\xe1\x35\x5e\x38\x7f\xcf\xdc\xdf\x23\x29\x17\xd0\x3c\xce\x60\x28\x70\x37\x99\xcc\x4f\x77\xb5\x7a\x4d\x38\x85\x1a\xcd\xd8\x12\x76\xc0\x3f\xb4\x11\x81\x12\x4d\x21\x5d\xe8\x2a\xcc\xa5\x10\x98\x1b\xa8\x2b\x29\x1a\x93\x00\x97\x5a\xef\x81\xd8\x52\xa4\xc7\xa0\x68\xe8\x53\x97\xa2\xff\x1b\xb3\xef\x65\x7e\x8b\x66\x3c\x1e\x6f\x98\xa0\x72\x13\x71\xe9\x4f\xd9\xc8\x06\xa9\xcc\x25\x87\x34\x4d\xa1\x49\xa0\xc1\x04\xbe\x84\x60\xa3\x6d\x2a\x0d\x60\x66\x1f\xed\xd3\x04\xce\xe1\x70\x79\x61\xb3\xfc\x39\x04\x31\xa9\x58\x30\xf1\xe1\xd0\x1a\x5e\x8a\x12\xb5\x26\x2b\xec\x2b\xe8\xee\xb2\x1d\xc8\xec\x3e\x4a\xbd\x82\x14\x9c\x83\x2a\xa2\x34\x7a\x92\x88\x12\x43\x5a\xb4\x59\xcc\x3a\xb2\x34\x05\x51\x73\xbe\x07\xa9\x0f\x8a\x79\x0b\xbf\x01\x79\xe4\xd3\xcc\x17\x69\x0a\xb5\xa0\xce\xc4\x74\xbf\xd2\x3a\xdf\xb7\x3c\x26\x91\xcd\x0b\xfb\x15\x93\x79\x1f\xcd\x03\x6e\x48\x7f\x8b\x1d\xd2\x43\x7e\x48\x1f\x60\xe8\x3a\x4c\x8f\xf1\xf3\x1d\xa9\x1e\x3b\x37\xf0\x00\x37\x51\x97\x19\xaa\xc7\xd8\xf9\x0e\x53\xc3\xce\x99\xfa\x8d\x30\xbd\xb5\x17\x70\xf9\x72\xf2\x00\x77\x54\x4a\x3e\xc8\x5c\x48\xb3\x1d\xdf\x73\xb2\xb5\xe5\x12\x8c\x8c\xac\x5e\xbb\x96\xd0\xe8\xc2\x65\xdc\x19\x74\x1c\x2e\x5c\xa3\x7f\x06\x23\xf7\x66\xe7\x59\x89\x6e\xd5\x8b\xe9\x74\x7a\x01\xed\x8f\x63\x7f\x21\x36\x08\x55\x8d\xbb\x07\xf4\xd1\x75\x9e\xdb\xbc\xff\x29\x1a\x35\x3c\x3a\x9d\x9a\xf7\x4f\xd0\xaa\xcb\x0d\x03\xb5\xe0\x4f\x7f\x82\xa3\xd9\x21\x8c\xe3\x18\xfe\x8b\xa8\x5b\xd7\xc2\xa9\x14\xae\x5d\x9b\xa7\xa3\x2f\x99\xd6\xae\x81\xa2\x81\x4a\x81\xcd\x9a\x8f\x3b\xf6\x8f\x74\x6c\xc8\x60\x01\xd3\x43\x05\xed\x71\xd8\x4b\x0b\x27\xb2\x45\x8f\xef\x30\x11\x9c\xed\xfa\xf2\x06\x2b\x59\x89\xf0\x45\x0a\x41\xd0\x5f\x7c\x44\x61\x09\x3a\x66\x67\x1a\xcd\x3b\xef\x8b\x71\x93\x1d\x4f\xe5\xae\xc9\x05\x5c\x4f\xa7\xd3\xc9\x91\x12\xbb\xbd\x79\x5f\x55\xb6\x6c\x02\x22\xb6\xee\x48\xec\x6c\xeb\x0a\x47\x5b\x02\xd9\x23\x8d\x43\x2e\x39\xf7\x35\x4b\xb3\xd4\x1a\xb8\x69\x78\xa5\x10\x5e\xce\x4f\x64\xd1\x9e\x25\x7b\x5b\x3b\x74\xcf\x09\xdb\x1f\xba\x68\x68\xb3\x03\xe2\xf0\x72\xe0\x94\x81\xbf\x4e\x3b\xe6\xac\xd3\x9b\xed\x2d\x7a\xe0\xae\xbd\xbf\x0e\x6d\xd6\xd3\xdf\xf3\x39\xbf\xfc\xc0\x6d\x74\xd3\x55\xad\x8b\xf1\x81\xa2\x93\xf9\xb1\x6f\xde\x18\x54\xb6\x4a\x96\x36\x65\x59\x5f\xd8\x5b\x80\xc2\x23\x97\xb8\x52\x5d\x61\xa8\x50\x50\x54\x6d\x49\xe1\x2b\x7b\x5b\x00\x0e\x5c\xe6\x2f\x94\x7d\x38\x7d\x64\xc0\xb8\x92\x4c\x0a\x04\x00\x38\x08\x02\x07\xd4\x01\x52\x2d\x31\x72\x52\x69\xa4\x90\x82\xff\x56\x61\x3c\x89\x6a\xc1\xee\xc6\x93\xb0\x79\x3f\xe4\xd1\xce\xcf\xbb\x1b\x62\xab\xf6\x79\x0a\x41\x62\x14\x30\x9a\x8e\x02\x38\x3f\x15\x82\x36\xeb\x8e\x16\x7b\x0d\xfa\x4b\x01\x12\x43\x17\xae\x6f\xed\xaf\x6a\xff\x08\x32\x92\xdf\xae\xdc\x45\x68\x66\x4b\xad\xf1\x11\x5b\xb2\x26\x86\x28\xc7\x75\x32\x87\x3d\x79\x73\x47\xcc\xad\x73\xe6\xe0\x2f\xa3\xae\x3d\x0e\xdd\x0f\x4a\xee\x2d\x93\x8a\xa2\x0a\x15\xa1\xac\xd6\x33\x78\x5e\xdd\xcd\xff\xd1\xfe\xe0\xe6\x9a\xf8\x8f\xaa\x5a\x29\x5c\x1c\x69\xd4\x34\x84\xcf\x21\x48\x62\x4b\xf0\x5b\x6c\xba\xcd\xf6\xbf\x91\x80\x13\x3f\x55\x40\xf7\x05\x43\x33\x5e\x32\x4a\x39\x5a\x85\xf7\xec\x6d\x30\x5a\xff\xf7\x43\x6a\x28\x12\x9a\xdf\x28\xf6\x6b\x76\x80\x5c\xe3\x23\x0b\xba\x9f\x3b\x46\x16\x00\xa1\xdd\x32\x73\x36\x6f\xee\xd9\x6e\x58\x8d\x9c\x2d\x9a\x2f\x5e\x68\xad\x5c\xad\x35\x0e\x1b\x80\x5d\xc0\x48\xdb\xda\x8f\xea\xd1\x24\x2a\xea\x92\x08\xf6\x2b\x8e\x6d\x5e\x9a\x78\x5b\xb9\xdf\x4f\x82\xe3\x23\xf9\x48\x99\xfd\x0f\x1b\xa3\x36\xc7\x8d\x1a\x23\x8e\x5a\xef\x3e\xdf\x5f\xeb\x67\x30\x9d\x8f\x3e\xd2\x42\xa7\xa5\x84\x19\x51\xd0\x7f\x09\xdb\xe4\x0b\x4a\x5a\xe9\xed\x5c\x46\xd4\xc8\x37\x31\x5c\x7d\x2e\xe4\x26\x1d\x5d\x4f\x3b\x25\xbd\xa3\x9d\x9f\x47\x0d\xd6\x8e\x9c\x61\xb5\x6c\x43\x73\x01\xd7\xd3\xcf\xa1\xad\x6f\x84\x1c\xec\xc0\x28\x56\x21\x05\x92\x1b\xb6\xc6\xff\x87\x8d\x7c\x06\x23\x7f\xb4\x8a\x16\x87\xad\xf1\x1c\x4c\x07\xfa\xda\xd9\xce\xb6\xff\x6a\xe3\x0d\x62\x67\xe1\x73\x08\x4e\x6e\xe4\x41\x24\x1e\x10\x1e\x84\xf6\xc3\x71\xef\x7e\x10\x0c\x0e\x73\x8a\xad\x76\xbb\x9f\xb2\x27\x51\x61\x4a\x3e\x0e\x12\xe3\xbe\x65\xb2\x3a\x77\x1c\x1c\x03\x3f\x3c\x2c\xe9\x76\xc3\x8b\x8c\xbd\xbf\xe3\xc1\x3d\x0b\x7a\xc5\x49\x77\x17\x6b\x2b\x11\xd8\xed\x3f\xf9\x8a\x63\xf8\xde\x10\x65\x80\xc0\x0f\x6f\xa0\xae\x28\x31\x36\x7b\x49\xb0\xf9\xd1\xf7\x9a\xdb\x6f\xc2\x32\xa2\x34\x2c\xa5\xda\x10\x45\x9b\xfe\x8c\x29\x70\xeb\x7e\x7e\x6b\x4b\x3f\x8d\xe6\x8d\x3d\xc5\xd6\x84\x8f\x8f\xee\x7d\x4f\xc7\xa3\xa8\xef\xf2\xd1\x24\x42\x92\x17\xc7\x84\x2e\x63\x75\x72\x53\x78\xeb\xae\x00\xe3\xa7\x63\x53\x30\x3d\x89\x88\x31\x6a\x3c\x1a\x80\x61\x34\xb1\x7e\xbd\xec\x5d\xc9\xba\xe5\xc9\x20\xac\x1e\xe3\xb1\x2f\xa6\xbb\x42\xa0\x25\xcf\xb5\x1e\x7b\x5c\x8d\x2e\x7a\xbc\x87\xb0\x1a\x3d\x1b\x75\x8e\xda\x87\xf7\x7e\x1f\xe9\x49\x4d\x06\xac\x47\x36\xca\x46\x47\xe2\x09\xa5\xaf\x6d\xfc\x8c\x83\x13\x91\x7e\x88\x8e\x49\x67\x6c\x7f\x5e\x3f\x6a\x65\xff\x11\xcd\x03\x26\x66\x74\x34\x89\x74\x9d\xf9\xde\xc4\xf8\x45\x77\x01\x6b\xc9\x1c\x78\x0f\x53\xc1\x51\x41\x61\x45\x0c\x8b\x8a\xf0\xa0\x08\x79\x24\x6b\x34\x22\xfd\xae\x76\x17\xd6\xe0\xd3\x49\xd7\xda\xfa\x4a\xdb\xe2\xca\x37\xfc\x37\x98\x69\xd7\x49\x80\x06\xef\xae\x9b\xe3\xbb\x36\xaf\xbe\x7d\xd3\xeb\xdc\x74\x11\x31\x76\xdc\xbb\xcf\x35\x4f\xf5\x49\x4e\x7e\x1f\xba\xd9\x6c\x22\xff\x13\x96\xeb\xe0\x77\x8d\x94\x98\x54\x2c\x7a\xaf\x03\x20\x7a\x2b\x72\xa0\xb8\x44\xb5\xe8\xb1\x6f\xba\x2b\x49\xec\xbf\x5c\x4c\x62\xff\x71\xf6\xff\x05\x00\x00\xff\xff\xa3\x72\xd7\x0f\xad\x2d\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
